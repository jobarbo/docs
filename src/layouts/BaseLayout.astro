---
interface Props {
	title: string;
	description?: string;
}

const {title, description = "UNIK - Documentation"} = Astro.props;
---

<!doctype html>
<html lang='fr'>
	<head>
		<meta charset='UTF-8' />
		<meta name='viewport' content='width=device-width, initial-scale=1.0' />
		<title>{title}</title>
		<meta name='description' content={description} />
		<link rel='icon' type='image/svg+xml' href='/favicon.svg' />
	</head>
	<body>
		<div class='page-container'>
			<aside class='sidebar' id='main-sidebar'>
				<div class='sidebar-header'>
					<a href='/' class='logo'>
						<h1>Documentation Unik (Web Dev)</h1>
					</a>
				</div>
				<slot name='sidebar' />
			</aside>

			<button id='sidebar-toggle' class='sidebar-toggle' aria-label='Toggle Sidebar'>
				<svg
					id='sidebar-toggle-icon'
					class='sidebar-toggle-icon'
					xmlns='http://www.w3.org/2000/svg'
					width='24'
					height='24'
					viewBox='0 0 24 24'
					fill='none'
					stroke='currentColor'
					stroke-width='2'
					stroke-linecap='round'
					stroke-linejoin='round'>
					<polyline points='15 18 9 12 15 6'></polyline>
				</svg>
			</button>

			<main class='content' id='main-content'>
				<slot />
			</main>
		</div>

		<script>
			// Sidebar toggle functionality
			const sidebarToggle = document.getElementById("sidebar-toggle");
			const sidebar = document.getElementById("main-sidebar");
			const content = document.getElementById("main-content");
			const body = document.body;

			// Check saved preference
			const sidebarHidden = localStorage.getItem("sidebarHidden") === "true";

			// Apply initial state
			if (sidebarHidden) {
				body.classList.add("sidebar-hidden");
			}

			if (sidebarToggle && sidebar && content) {
				sidebarToggle.addEventListener("click", () => {
					body.classList.toggle("sidebar-hidden");

					// Ensure smooth transition
					requestAnimationFrame(() => {
						document.documentElement.style.setProperty("--content-transition", "active");

						// Remove transition class after animation completes
						setTimeout(() => {
							document.documentElement.style.setProperty("--content-transition", "");
						}, 300);
					});

					// Save preference
					localStorage.setItem("sidebarHidden", body.classList.contains("sidebar-hidden").toString());
				});
			}
		</script>
	</body>
</html>

<style>
	:root {
		--primary: #f0082b;
		--primary-dark: #1d4ed8;
		--secondary: #64748b;
		--dark: #0f172a;
		--light: #f8fafc;
		--white: #fff;
		--black: #000;
		--gray-100: #f1f5f9;
		--gray-200: #e2e8f0;
		--gray-300: #cbd5e1;
		--gray-400: #94a3b8;
		--gray-700: #334155;
		--gray-800: #1e293b;
		--gray-900: #020617;

		--blue-100: #eaefff;
		--blue-200: #c7d2fe;
		--blue-300: #a855f7;
		--blue-400: #818cf8;
		--blue-500: #6366f1;
		--blue-600: #4f46e5;
		--unik: #f0082b;
		--sidebar-width: 280px;
		--header-height: 60px;
		--content-width: 900px;
		--content-transition: "";
	}

	* {
		box-sizing: border-box;
		margin: 0;
		padding: 0;
	}

	html,
	body {
		font-family:
			system-ui,
			-apple-system,
			BlinkMacSystemFont,
			"Segoe UI",
			Roboto,
			Oxygen,
			Ubuntu,
			Cantarell,
			"Open Sans",
			"Helvetica Neue",
			sans-serif;
		color: var(--dark);
		background-color: var(--light);
		line-height: 1.5;
		height: 100%;
	}

	html {
		scroll-behavior: smooth;
	}

	.page-container {
		display: flex;
		height: 100vh;
		width: 100%;
		position: relative;
	}

	.sidebar {
		width: var(--sidebar-width);
		background-color: var(--gray-100);
		border-right: 1px solid var(--gray-200);
		height: 100%;
		overflow-y: auto;
		padding: 1rem;
		flex-shrink: 0;
		transition: transform 0.3s ease;
		position: relative;
		z-index: 10;
	}

	.sidebar-header {
		padding-bottom: 1rem;
		margin-bottom: 1rem;
		border-bottom: 1px solid var(--gray-200);
	}

	.logo h1 {
		font-size: 1.5rem;
		color: var(--unik);
	}

	.logo {
		text-decoration: none;
	}

	.content {
		flex: 1;
		padding: 4em;
		overflow-y: auto;
		transition: all 0.3s ease;
		max-width: 100%;
		width: 100%;
	}

	.sidebar-toggle {
		position: fixed;
		top: 1rem;
		left: calc(var(--sidebar-width) - 1px);
		background-color: var(--unik);
		color: white;
		border: none;
		border-radius: 0 4px 4px 0;
		padding: 0.5rem;
		display: flex;
		align-items: center;
		justify-content: center;
		cursor: pointer;
		z-index: 4;
		box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
		transition: left 0.3s ease;
	}

	.sidebar-toggle-icon {
		transition: transform 0.3s ease;
	}

	.sidebar-toggle:hover {
		background-color: var(--primary-dark);
	}

	/* When sidebar is hidden */
	:global(body.sidebar-hidden) .sidebar {
		transform: translateX(-100%);
	}

	:global(body.sidebar-hidden) .content {
		margin-left: calc(-1 * var(--sidebar-width));
		width: calc(100% + var(--sidebar-width));
	}

	:global(body.sidebar-hidden) .sidebar-toggle {
		left: 0;
	}

	:global(body.sidebar-hidden) .sidebar-toggle-icon {
		transform: rotate(180deg);
	}

	:global(body.sidebar-hidden) .toc-container {
		left: 0;
	}

	@media (max-width: 768px) {
		.page-container {
			flex-direction: column;
		}

		.sidebar {
			width: 100%;
			height: auto;
			flex-shrink: 0;
			transform: none;
		}

		.sidebar-toggle {
			top: auto;
			bottom: 1rem;
			left: 1rem;
			border-radius: 50%;
		}

		:global(body.sidebar-hidden) .sidebar {
			height: 0;
			padding: 0;
			overflow: hidden;
		}

		:global(body.sidebar-hidden) .sidebar-toggle {
			transform: none;
		}

		:global(body.sidebar-hidden) .sidebar-toggle-icon {
			transform: rotate(180deg);
		}

		.content {
			margin-left: 0;
			width: 100%;
		}
	}
</style>
